cmake_minimum_required(VERSION 3.5)

project(RayCastingCube LANGUAGES C CXX)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

file(GLOB SOURCES
    main.cpp
    src/glad.c
    window/*
    imgui/*
    tools/*
    opengl/*
    models/*
    shaders/*)
add_executable(RayCastingCube ${SOURCES} )
target_include_directories(RayCastingCube PUBLIC imgui include src window tools opengl models)

find_package(glfw3 3.3 REQUIRED)
# Find and include GLM
set(OpenGL_GL_PREFERENCE GLVND)
find_package(OpenGL REQUIRED)
# Find and include GLFWa
find_package(glm REQUIRED)


file(GLOB GLSL_SOURCE_FILES
    shaders/*.frag
    shaders/*.vert
)

add_custom_target(
    Shaders
    DEPENDS ${GLSL_SOURCE_FILES}
)
add_dependencies(RayCastingCube Shaders)

add_custom_command(TARGET Shaders POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
    "$<TARGET_PROPERTY:RayCastingCube,SOURCE_DIR>/shaders"
    "$<TARGET_PROPERTY:RayCastingCube,BINARY_DIR>/$<CONFIGURATION>/shaders"
)

file(GLOB TEX_SOURCE_FILES
    textures/*
)
add_custom_target(
    Textures
    DEPENDS ${TEX_SOURCE_FILES}
)
add_dependencies(RayCastingCube Textures)
add_custom_command(TARGET Textures POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
    "$<TARGET_PROPERTY:RayCastingCube,SOURCE_DIR>/textures"
    "$<TARGET_PROPERTY:RayCastingCube,BINARY_DIR>/$<CONFIGURATION>/textures"
)
target_link_libraries(RayCastingCube  OpenGL::GL glfw glm::glm ${GLFW3_LIBRARY})

install(TARGETS RayCastingCube
    LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
    RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
)
